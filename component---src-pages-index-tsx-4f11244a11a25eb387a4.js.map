{"version":3,"sources":["webpack://learning-architect.blog/./src/common/formatDate.ts","webpack://learning-architect.blog/./src/components/RecentPublications.tsx","webpack://learning-architect.blog/./src/components/About.tsx","webpack://learning-architect.blog/./src/components/WithSidebarLayout.tsx","webpack://learning-architect.blog/./src/pages/index.tsx"],"names":["formatDate","strDate","Date","toLocaleDateString","RecentPublications","posts","useStaticQuery","allMdx","nodes","className","map","post","frontmatter","date","href","slug","headings","value","About","WithSidebarLayout","children","props","data","key","excerpt"],"mappings":"uIAAO,SAASA,EAAWC,GAC1B,OAAO,IAAIC,KAAKD,GAASE,qB,oICGnB,SAASC,IACf,IAkBMC,GAlBOC,QAAe,cAkBTC,OAAOC,MAE1B,OAAO,uBAAKC,UAAW,uBACtB,sBAAIA,UAAW,SAAf,wBACA,0BACC,0BAAI,sBAAIA,UAAU,eACjBJ,EAAMK,KAAI,SAAAC,GACV,OACC,0BACC,wBAAMF,UAAU,kBAAiBT,OAAWW,EAAKC,YAAYC,MAA7D,OAA6E,qBAAGJ,UAAW,eAAgBK,KAAI,IAAMH,EAAKI,KAAX,KAAqBJ,EAAKK,SAAS,GAAGC,OACrJ,sBAAIR,UAAU,kBAIjB,0BAAI,qBAAGA,UAAW,eAAgBK,KAAK,KAAnC,mBCnCA,SAASI,IACf,OAAQ,+BACP,sBAAIT,UAAU,SAAd,YACA,qBAAGA,UAAU,QAAb,sIACA,sBAAIA,UAAU,SAAd,YACA,qBAAGA,UAAU,QAAb,+BACA,qBAAGA,UAAU,QAAb,yGAEC,2BAFD,uBAE2B,qBAAGA,UAAU,eAAeK,KAAM,wCAAlC,mCCNtB,SAASK,EAAT,GAA0C,IAAbC,EAAY,EAAZA,SACnC,OACC,uBAAKX,UAAU,gFACd,uBAAKA,UAAU,8CACd,uBAAKA,UAAU,2BACd,uBAAKA,UAAU,gBACd,gBAACS,EAAD,MACA,gBAACd,EAAD,QAGF,wBAAMK,UAAU,kBACdW,O,yECgCN,UA1CkB,SAACC,GAClB,IAAMhB,EAAqBgB,EAAMC,KAAKf,OAAOC,MAC7C,OACC,gBAAC,IAAD,KACC,2BAASC,UAAU,QAClB,8DACA,sBAAIA,UAAU,YAAd,iCAGA,sBAAIA,UAAU,SAAd,iFAID,2BAASA,UAAU,IAClB,0BACEJ,EAAMK,KAAI,SAAAC,GAAI,OACd,sBAAIF,UAAW,QAASc,IAAKZ,EAAKI,MACjC,+BACC,sBAAIN,UAAU,eACb,qBAAGK,KAAI,KAAOH,EAAKI,KAAZ,KACLJ,EAAKK,SAAS,GAAGC,QAGpB,uBAAKR,UAAU,uBACbT,OAAWW,EAAKC,YAAYC,MAD9B,YAC6C,wBAC5CJ,UAAU,iBADkC,YAG7C,yBACEE,EAAKa,SAEP,uBAAKf,UAAU,QACd,qBAAGA,UAAU,eACZK,KAAI,KAAOH,EAAKI,KAAZ,KADL","file":"component---src-pages-index-tsx-4f11244a11a25eb387a4.js","sourcesContent":["export function formatDate(strDate: string) {\n\treturn new Date(strDate).toLocaleDateString();\n}\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { formatDate } from '../common/formatDate';\n\nexport function RecentPublications() {\n\tconst data = useStaticQuery(graphql`\n\t query recentsQuery {\n\t\t allMdx(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t ) {\n\t\t  nodes {\n\t\t\t headings(depth: h1) {\n\t\t\t\tvalue\n\t\t\t }\n\t\t\t slug\n\t\t\t frontmatter {\n\t\t\t\tdate\n\t\t\t\tauthor\n\t\t\t }\n\t\t  }\n\t\t }\n\t  }\n  `)\n\tconst posts = data.allMdx.nodes;\n\n\treturn <nav className={'recent-publications'}>\n\t\t<h3 className={'sub-h'}>Последние публикации</h3>\n\t\t<ul>\n\t\t\t<li><hr className=\"mb-3 mt-3\"/></li>\n\t\t\t{posts.map(post => {\n\t\t\t\treturn (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span className=\"text-gray-500\">{formatDate(post.frontmatter.date)} - </span><a className={'link-default'} href={`/${post.slug}/`}>{post.headings[0].value}</a>\n\t\t\t\t\t\t<hr className=\"mb-3 mt-3\"/>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t<li><a className={'link-default'} href=\"/\">К списку тем</a></li>\n\t\t</ul>\n\t</nav>;\n}\n","import * as React from 'react';\n\nexport function About() {\n\treturn (<section>\n\t\t<h3 className=\"sub-h\">Про блог</h3>\n\t\t<p className=\"py-5\">Записываю мысли о работе и не только. Попытка систематизировать информацию и записать, то что приходиться так или иначе повторять.</p>\n\t\t<h3 className=\"sub-h\">Про меня</h3>\n\t\t<p className=\"pt-5\">Привет, меня зовут Евгений.</p>\n\t\t<p className=\"py-5\">\n\t\t\tНачиная с 2019 формально работаю архитектором. До сих пор разбираюсь что это значит и как с этим жить.\n\t\t\t<br />Написать можно сюда <a className=\"link-default\" href={\"mailto:admin@learning-architect.blog\"}>admin@learning-architect.blog</a>\n\t\t</p>\n\t</section>);\n}\n","import * as React from 'react';\nimport { RecentPublications } from './RecentPublications';\nimport { About } from './About';\n\nexport function WithSidebarLayout({ children }) {\n\treturn (\n\t\t<div className='container bg-white max-w-3xl mx-auto px-4 sm:px-6 xl:max-w-5xl xl:px-0 py-16'>\n\t\t\t<div className='grid grid-cols-1 md:grid-cols-12 shadow-lg'>\n\t\t\t\t<div className=\"col-span-3 p-6 border-r\">\n\t\t\t\t\t<div className=\"sticky top-0\">\n\t\t\t\t\t\t<About/>\n\t\t\t\t\t\t<RecentPublications/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<main className=\"col-span-8 p-6\">\n\t\t\t\t\t{children}\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import * as React from \"react\"\nimport { WithSidebarLayout } from '../components/WithSidebarLayout';\nimport { graphql } from 'gatsby';\nimport { formatDate } from '../common/formatDate';\n\nconst IndexPage = (props) => {\n\tconst posts: BlogsNode[] = props.data.allMdx.nodes;\n\treturn (\n\t\t<WithSidebarLayout>\n\t\t\t<section className=\"hero\">\n\t\t\t\t<title>Блог обучающегося архитектора</title>\n\t\t\t\t<h1 className=\"headline\">\n\t\t\t\t\tБлог обучающегося архитектора\n\t\t\t\t</h1>\n\t\t\t\t<h3 className='sub-h'>\n\t\t\t\t\tВсё около программной архитектуры чему обучаюсь во время работы и не только.\n\t\t\t\t</h3>\n\t\t\t</section>\n\t\t\t<section className=\"\">\n\t\t\t\t<ul>\n\t\t\t\t\t{posts.map(post => (\n\t\t\t\t\t\t<li className={'py-12'} key={post.slug}>\n\t\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t\t<h2 className='secondary-h'>\n\t\t\t\t\t\t\t\t\t<a href={`./${post.slug}/`}>\n\t\t\t\t\t\t\t\t\t\t{post.headings[0].value}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<div className='text-gray-500 py-2'>\n\t\t\t\t\t\t\t\t\t{formatDate(post.frontmatter.date)} / автор <span\n\t\t\t\t\t\t\t\t\tclassName='text-gray-700'>Евгений</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{post.excerpt}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div className='mt-4'>\n\t\t\t\t\t\t\t\t\t<a className=\"link-default\"\n\t\t\t\t\t\t\t\t\t\thref={`./${post.slug}/`}>Читать дальше →</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t</li>))}\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</WithSidebarLayout>\n\t)\n}\n\nexport default IndexPage\n\ninterface BlogsNode {\n\tid: string;\n\texcerpt: string;\n\theadings: [{ value: string }];\n\tslug: string;\n\tfrontmatter: {\n\t\tdate: string;\n\t\tauthor: string;\n\t}\n}\n\nexport const pageQuery = graphql`\n  query blogPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n\t  nodes {\n\t  \t id\n\t\t excerpt(pruneLength: 650)\n\t\t headings(depth: h1) {\n\t\t \tvalue\n\t\t }\n\t\t slug\n\t\t frontmatter {\n\t\t\tdate\n\t\t\ttitle\n\t\t\tauthor\n\t\t }\n\t  }\n    }\n  }\n`\n"],"sourceRoot":""}